[{"C:\\Users\\User\\Desktop\\crud\\booking\\src\\index.js":"1","C:\\Users\\User\\Desktop\\crud\\booking\\src\\App.js":"2","C:\\Users\\User\\Desktop\\crud\\booking\\src\\components\\navbar.js":"3","C:\\Users\\User\\Desktop\\crud\\booking\\src\\pages\\Create.js":"4","C:\\Users\\User\\Desktop\\crud\\booking\\src\\pages\\List.js":"5","C:\\Users\\User\\Desktop\\crud\\booking\\src\\components\\roomCard.js":"6","C:\\Users\\User\\Desktop\\crud\\booking\\src\\pages\\Room.js":"7"},{"size":339,"mtime":1608052613362,"results":"8","hashOfConfig":"9"},{"size":681,"mtime":1608066550198,"results":"10","hashOfConfig":"9"},{"size":1655,"mtime":1608053182997,"results":"11","hashOfConfig":"9"},{"size":3599,"mtime":1608066954733,"results":"12","hashOfConfig":"9"},{"size":689,"mtime":1608066053466,"results":"13","hashOfConfig":"9"},{"size":1371,"mtime":1608055688001,"results":"14","hashOfConfig":"9"},{"size":2105,"mtime":1608063871314,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"nlq8m6",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"C:\\Users\\User\\Desktop\\crud\\booking\\src\\index.js",[],["34","35"],"C:\\Users\\User\\Desktop\\crud\\booking\\src\\App.js",[],"C:\\Users\\User\\Desktop\\crud\\booking\\src\\components\\navbar.js",["36"],"import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Container\r\n} from \"@material-ui/core\";\r\n// import { Home } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: 'lightblue'\r\n  },\r\n  navbarDisplayFlex: {\r\n    display: `flex`,\r\n    justifyContent: `space-between`\r\n  },\r\n  navDisplayFlex: {\r\n    display: `flex`,\r\n    justifyContent: `space-between`\r\n  },\r\n  linkText: {\r\n    fontWeight: 500,\r\n    textDecoration: `none`,\r\n    textTransform: `uppercase`,\r\n    color: `white`\r\n  }\r\n});\r\n\r\nconst navLinks = [\r\n  { title: `Rooms`, path: `/List` },\r\n  { title: `New Room`, path: `/Create` },\r\n];\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\" className={classes.root}>\r\n      <Toolbar>\r\n        <Container maxWidth=\"md\" className={classes.navbarDisplayFlex}>\r\n          {/* <IconButton edge=\"start\" color=\"inherit\" aria-label=\"home\">\r\n            <Home fontSize=\"large\" />\r\n          </IconButton> */}\r\n          <List\r\n            component=\"nav\"\r\n            aria-labelledby=\"main navigation\"\r\n            className={classes.navDisplayFlex}\r\n          >\r\n            {navLinks.map(({ title, path }) => (\r\n              <a href={path} key={title} className={classes.linkText}>\r\n                <ListItem button>\r\n                  <ListItemText primary={title} />\r\n                </ListItem>\r\n              </a>\r\n            ))}\r\n          </List>\r\n        </Container>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default Navbar;\r\n","C:\\Users\\User\\Desktop\\crud\\booking\\src\\pages\\Create.js",["37","38","39","40","41","42"],"C:\\Users\\User\\Desktop\\crud\\booking\\src\\pages\\List.js",[],"C:\\Users\\User\\Desktop\\crud\\booking\\src\\components\\roomCard.js",["43","44","45"],"import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginTop: 25,\r\n    maxWidth: 300,\r\n    marginLeft: 25,\r\n  },\r\n  link: {\r\n    textDecoration: \"none\"\r\n  }\r\n});\r\n\r\n\r\n\r\nexport default function RoomCard(props) {\r\n  const classes = useStyles();\r\n  const room_id = props.id\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        {/* <Link to={`/CertRoom/${room_id}`} className={classes.link}>  */}\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt=\"xxx\"\r\n          height=\"140\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" name = {props.name}>\r\n          {props.name}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {props.about + \" \" + \"qweqweqweqweqw eqweqweqweqweq weqweqweqweqweqw qweqwe\"}\r\n          </Typography>\r\n        </CardContent>\r\n        {/* </Link> */}\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\crud\\booking\\src\\pages\\Room.js",["46","47"],"import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n      height: `100%`,\r\n      display: `flex`,\r\n      flexDirection: `column`,\r\n      justifyContent: `space-between`\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    cont: {\r\n        display: `flex`,\r\n        flexDirection: `row`,\r\n        justifyContent: `space-between`,\r\n        height: `590px`,\r\n        maxWidth: `1000px`,        \r\n        marginTop: 100,\r\n    },\r\n    TextField: {\r\n        marginTop: `100px`\r\n    },\r\n    del: {\r\n        width: `50px`\r\n    }\r\n  }));\r\n  let flag = false \r\n  let data = false\r\n\r\nconst Room = () => {\r\n    const classes = useStyles();\r\n    return (\r\n    <React.Fragment>\r\n      <Container className={classes.cont}>\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.button}\r\n            startIcon={<DeleteIcon />}\r\n            >\r\n            Delete room\r\n            </Button>\r\n            \r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Name: \r\n          </Typography>\r\n            \r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Space:\r\n          </Typography>\r\n\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Bathrooms:\r\n          </Typography>  \r\n          \r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Space areas:\r\n          </Typography>  \r\n          \r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Minibar:\r\n          </Typography>\r\n        </form>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Room",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":5,"column":3,"nodeType":"54","messageId":"55","endLine":5,"endColumn":13},{"ruleId":"52","severity":1,"message":"56","line":3,"column":8,"nodeType":"54","messageId":"55","endLine":3,"endColumn":17},{"ruleId":"52","severity":1,"message":"57","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":12},{"ruleId":"52","severity":1,"message":"58","line":5,"column":8,"nodeType":"54","messageId":"55","endLine":5,"endColumn":22},{"ruleId":"52","severity":1,"message":"59","line":6,"column":8,"nodeType":"54","messageId":"55","endLine":6,"endColumn":14},{"ruleId":"52","severity":1,"message":"60","line":7,"column":8,"nodeType":"54","messageId":"55","endLine":7,"endColumn":24},{"ruleId":"52","severity":1,"message":"61","line":12,"column":8,"nodeType":"54","messageId":"55","endLine":12,"endColumn":13},{"ruleId":"52","severity":1,"message":"62","line":2,"column":9,"nodeType":"54","messageId":"55","endLine":2,"endColumn":13},{"ruleId":"52","severity":1,"message":"63","line":25,"column":9,"nodeType":"54","messageId":"55","endLine":25,"endColumn":16},{"ruleId":"64","severity":1,"message":"65","line":40,"column":34,"nodeType":"66","messageId":"67","endLine":40,"endColumn":35},{"ruleId":"52","severity":1,"message":"68","line":37,"column":7,"nodeType":"54","messageId":"55","endLine":37,"endColumn":11},{"ruleId":"52","severity":1,"message":"69","line":38,"column":7,"nodeType":"54","messageId":"55","endLine":38,"endColumn":11},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'clsx' is defined but never used.","'InputAdornment' is defined but never used.","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'Input' is defined but never used.","'Link' is defined but never used.","'room_id' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'flag' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]